@* @model IEnumerable<ShoeColor> *@
@model X.PagedList.IPagedList<ShoeColor>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Shoe Color" + " ";
    Layout = "_AdminLayout";
}

@{
    if(TempData["SuccessMessage"] != null)
    {
        <div id="success-alert" class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

}

<script src="~/js/Success.js"></script>

<link rel="stylesheet" href="~/css/custom.css" />

<form asp-action="Index" method="get" class="mb-4">
    <div class="input-group">
        <input name="nameSearch" type="text" class="form-control" placeholder="Search by name..." />
        <button type="submit" class="btn btn-primary">
            <i class="fa fa-search"></i>
        </button>
    </div>
</form>

<div class="admin-title mt-4 mb-4">
    <ion-icon name="settings-outline"></ion-icon>
    <div class="admin-title-content">
        <h5>Quản lý thông tin màu sắc giày</h5>
        <span>Liệt kê danh sách thông tin màu sắc giày</span>
    </div>
</div>

@* <p class="text-center">
    <a asp-action="Create" class="btn btn-outline-primary">Create New <i class="fa-solid fa-circle-plus"></i></a>
</p> *@
<table id="table_id" class="custom-table">
    <thead>
    <tr>
        <th>
            Id
        </th>
        <th>
            Giày
        </th>
        <th>
            Màu sắc
        </th>
        <th>
            Giá bán
        </th>
        <th>
            Thứ tự sắp xếp
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Shoe.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Color.Name)
                    </td>
                    @* <td> *@
                    @*     @Html.DisplayFor(modelItem => item.FactoryPrice) *@
                    @* </td> *@
                    <td>
                        @Html.DisplayFor(modelItem => item.SalePrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SortOrder)
                    </td>
                    @* <td> *@
                    @*     @Html.DisplayFor(modelItem => item.Active) *@
                    @* </td> *@
                    @* <td data-order="@item.Created.ToBinary()"> *@
                    @*     @item.Created *@
                    @* </td> *@
                    @* <td data-order="@item.Created.ToBinary()"> *@
                    @*     @Html.DisplayFor(modelItem => item.Edited) *@
                    @* </td> *@
                    <td class="dt-nowrap">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn-option" role="button "data-bs-toggle="tooltip"
                                data-bs-placement="bottom" title="Edit">
                                <i class="fa-regular fa-pen-to-square"></i>
                            </a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn-option" role="button" data-bs-toggle="tooltip"
                                data-bs-placement="bottom" title="Details">
                                <i class="fa-solid fa-circle-info"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn-option" role="button" data-bs-toggle="tooltip"
                                data-bs-placement="bottom" title="Detele">
                                <i class="fa-solid fa-trash"></i>
                            </a>
                    </td>
                </tr>
        }
    </tbody>
</table>

<div class="pagination-container custom-pagination">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions { DisplayLinkToFirstPage = PagedListDisplayMode.Never, DisplayLinkToLastPage = PagedListDisplayMode.Never })
</div>

<style>
    .custom-pagination {
        display: flex;
        justify-content: flex-end;
        margin-top: 20px;
    }

    .custom-pagination .pagination {
        display: flex;
        list-style: none;
        padding: 0;
    }

    .custom-pagination .pagination li {
        margin: 0 5px;
    }

    .custom-pagination .pagination li a,
    .custom-pagination .pagination li span {
        display: block;
        width: 30px; /* Chiều rộng của ô vuông */
        height: 30px; /* Chiều cao của ô vuông */
        line-height: 30px; /* Căn giữa nội dung theo chiều dọc */
        text-align: center; /* Căn giữa nội dung theo chiều ngang */
        border: 1px solid #ddd; /* Đường viền ô vuông */
        border-radius: 4px; /* Góc bo tròn, có thể bỏ nếu muốn góc vuông hoàn toàn */
        background-color: #f8f9fa; /* Màu nền */
        color: #333; /* Màu chữ */
        text-decoration: none; /* Bỏ gạch chân */
    }

    .custom-pagination .pagination li a:hover,
    .custom-pagination .pagination li span:hover {
        background-color: #007bff; /* Màu nền khi hover */
        color: white; /* Màu chữ khi hover */
    }
</style>
