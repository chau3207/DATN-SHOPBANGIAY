@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Trang danh sách sản phẩm";
}
@model ShoeStore.Models.ViewModels.ProductListViewModel

<div class="container">
    <section class="list mt-lg-5 mt-4 mb-5">
        <button class="btn-category d-lg-none" id="navbar-toggle">
            <span>Filter</span>
        </button>
        <div class="list-filter d-lg-block hidden" id="navbar-collapse">
            <h3>
                <strong>Danh mục</strong>
            </h3>
            <form id="search-product" method="get" asp-controller="Products" asp-action="Index">
                <div class="budget-wrap mt-5">
                    <h4 class="mb-3">Lọc theo giá</h4>
                    <div class="budget">
                        <div class="content">
                            <input type="range" name="maxPrice" min="1" max="999" value="@(Model.maxPrice ?? 900)" id="price-range-slider" data-rangeslider>
                            <div class="header">
                                <div class="title clearfix mt-3">
                                    <p>Giá tiền:</p>
                                    <span class="pull-right" id="price-display">$@Model.maxPrice</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                
                <!-- Tìm kiếm theo tên -->
                <div class="form-category mt-3">
                    <h4 class="mb-3">Tìm kiếm theo tên</h4>
                    <div class="form-group">
                        <input type="text" name="productName" class="form-control" placeholder="Nhập tên sản phẩm" value="@(Model.ProductName ?? "")">
                    </div>
                </div>

                <div class="form-category mt-3">
                    <h4 class="mb-3">Nhãn hàng</h4>
                    @for (var i = 0; i < Model.Brands.Count; i++)
                    {
                        var brand = Model.Brands[i];
                        <div class="form-check">
                            <label class="form-check-label" >
                                <input class="form-check-input" type="radio" name="brand" value="@brand.Name" @(brand.Id == Model.SelectedBrandId? "checked": "")>
                                @brand.Name
                            </label>
                        </div>
                    }
                </div>
                <div class="form-category mt-4">
                    <h4 class="mb-3">Kích cỡ</h4>
                    @for (var i = 0; i < Model.Sizes.Count; i++)
                    {
                        var size = Model.Sizes[i];
                        <div class="form-check">
                            
                            <label class="form-check-label">
                                <input class="form-check-input" type="radio" name="size" value="@size.Value" @(size.Id == Model.SelectedSizeId? "checked": "")>
                                @size.Value
                            </label>
                        </div>
                    }
    
                </div>
                <div class="btn-submit mt-4">
                    <button type="submit" id="btn-search-products">Tìm kiếm</button>
                </div>
            </form>
        </div>
        <div class="list-product">
            <div class="list-product-top">
                <h3>
                    <strong>@(Model.SearchedBrand ?? "Giày")</strong>
                </h3>
                <div class="form-floating">
                    <select class="form-select" id="sort-by" name="sort" aria-label="Floating label select example" form="search-product" asp-items="Model.SelectListItems">
                        @* <option value="latest" selected>Latest</option> *@
                        @* <option value="lowest">Price: Low to high</option> *@
                        @* <option value="highest">Price: High to low</option> *@
                    </select>
                    <label for="sort-by">Sắp xếp theo</label>
                </div>
            </div>
            <div class="list-product-container">
                <div class="product mt-4" data-aos="zoom-in">

                    @foreach (var product in Model.PagedProducts)
                    {
                        <div class="product-card">
                            <a asp-controller="Products" asp-action="Detail" asp-route-url="@product.Url">
                                <div class="product-card-image">
                                    <img loading="lazy" asp-append-version="true" src='@Url.Content(product?.ImagePath)' alt="">
                                </div>
                            </a>
                            <div class="product-card-top">
                                <span>@product.BrandName</span>
                                <a asp-controller="Products" asp-action="Detail" asp-route-url="@product.Url">
                                    <h6>@product.Name</h6>
                                </a>
                            </div>
                            <div class="product-card-bottom">
                                <h5>
                                    <strong>$@product.Price</strong>
                                </h5>
                                <div>
                                    <a href="">
                                        <i class="fa-solid fa-heart"></i>
                                    </a>
                                    <a href="">
                                        <i class="fa-solid fa-bag-shopping"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
            @* pagi mt-5 *@
            @* <div page-model="@Model?.PagingInfo" page-action="Index"
                 page-classes-enabled="true" 
                 page-class="pagi-item" 
                 page-class-normal=""
                 page-class-selected="is-active" 
                 page-url-brand="@Model?.CurrentBrand"
                 class="pagi mt-5">
            </div> *@
            
        </div>
        <div class="pagination-container mt-4 custom-pagination">
            @Html.PagedListPager(Model.PagedProducts, page => Url.Action("Index", new { 
                page, 
                sort = Model.SelectListItems.FirstOrDefault(i => i.Selected)?.Value, 
                productName = Model.ProductName, 
                brand = Model.CurrentBrand, 
                size = Model.SelectedSizeId, 
                minPrice = Model.minPrice, 
                maxPrice = Model.maxPrice }), 
                new PagedListRenderOptions { 
                    DisplayLinkToFirstPage = PagedListDisplayMode.Always, 
                    DisplayLinkToLastPage = PagedListDisplayMode.Always, 
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always, 
                    DisplayLinkToNextPage = PagedListDisplayMode.Always, 
                    MaximumPageNumbersToDisplay = 5 })
        </div>
    </section>
    
</div>

@section Scripts
{
    <script>
        $("#sort-by").change(function() {
          $("#btn-search-products").click();
        })

        
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var slider = document.getElementById('price-range-slider');
            var display = document.getElementById('price-display');

            slider.addEventListener('input', function () {
                display.textContent = '$' + slider.value;
            });
        });
    </script>
}

<style>
    .custom-pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
        margin-left: 20cm;
    }

    .custom-pagination .pagination {
        display: flex;
        list-style: none;
        padding: 0;
    }

    .custom-pagination .pagination li {
        margin: 0 5px;
    }

    .custom-pagination .pagination li a,
    .custom-pagination .pagination li span {
        display: block;
        width: 30px; /* Chiều rộng của ô vuông */
        height: 30px; /* Chiều cao của ô vuông */
        line-height: 30px; /* Căn giữa nội dung theo chiều dọc */
        text-align: center; /* Căn giữa nội dung theo chiều ngang */
        border: 1px solid #ddd; /* Đường viền ô vuông */
        border-radius: 4px; /* Góc bo tròn, có thể bỏ nếu muốn góc vuông hoàn toàn */
        background-color: #f8f9fa; /* Màu nền */
        color: #333; /* Màu chữ */
        text-decoration: none; /* Bỏ gạch chân */
    }

    .custom-pagination .pagination li a:hover,
    .custom-pagination .pagination li span:hover {
        background-color: #007bff; /* Màu nền khi hover */
        color: white; /* Màu chữ khi hover */
    }
</style>