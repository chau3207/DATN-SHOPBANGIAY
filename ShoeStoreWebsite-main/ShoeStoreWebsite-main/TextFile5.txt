file ShoeColorController.cs
// GET: ShoeColors/Edit/5
        public async Task<IActionResult> Edit(int id)
        {
            var shoeColor = await _unitOfWork.ShoeColors.FirstOrDefaultAsync(e => e.Id == id,
                include: e => e.Include(s => s.Images)
                    .Include(s => s.ShoeSizes)!
                    .ThenInclude(e => e.Size)!);

            if (shoeColor == null)
            {
                return NotFound();
            }

            ViewData["ColorId"] =
                new SelectList(await _unitOfWork.Colors.GetAllAsync(), "Id", "Name", shoeColor.ColorId);
            ViewData["ShoeId"] = new SelectList(await _unitOfWork.Shoes.GetAllAsync(), "Id", "Name", shoeColor.ShoeId);
            // ViewBag.SizeId = new SelectList(_context.Sizes, "Id", "Value");
            ViewBag.Sizes = await _unitOfWork.Sizes.GetAllAsync();

            return View(shoeColor);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Edit(int id,
            [Bind("Id,FactoryPrice,SalePrice,SortOrder,Active,ShoeId,ColorId")]
            ShoeColor shoeColor)
        {
            var shoeColorFromDb = await _unitOfWork.ShoeColors.FirstOrDefaultAsync(e => e.Id == id);
            if (id != shoeColor.Id || shoeColorFromDb == null)
            {
                return NotFound();
            }

            if (ModelState.IsValid)
            {
                shoeColor.Created = shoeColorFromDb.Created;
                shoeColor.Edited = DateTime.Now;
                _unitOfWork.ShoeColors.Update(shoeColor);
                await _unitOfWork.SaveChangesAsync();

                return RedirectToAction(nameof(Edit));
            }

            ViewData["ColorId"] =
                new SelectList(await _unitOfWork.Colors.GetAllAsync(), "Id", "Name", shoeColor.ColorId);
            ViewData["ShoeId"] = new SelectList(await _unitOfWork.Shoes.GetAllAsync(), "Id", "Name", shoeColor.ShoeId);
            ViewData["SizeId"] = new SelectList(await _unitOfWork.Sizes.GetAllAsync(), "id", "name");
            return View(shoeColor);
        }

        

    }
}

------------------------------------------------
file Edit.cshtml
@model ShoeStore.Models.ShoeColor

@{
    ViewData["Title"] = "Shoe Color Edit" + " ";
    Layout = "_AdminLayout";
}

<div class="admin-title mt-4 mb-4">
    <ion-icon name="settings-outline"></ion-icon>
    <div class="admin-title-content">
        <h5>Quản lý thông tin màu sắc giày</h5>
        <span>Liệt kê danh sách thông tin màu sắc giày</span>
    </div>
</div>

<hr />
<div class="container p-0">
    <div class="">
        <h3 class="title-option mb-4">Edit</h3>
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label asp-for="FactoryPrice" class="form-label">Giá xuất xưởng</label>
                    <input asp-for="FactoryPrice" class="form-control" />
                    <span asp-validation-for="FactoryPrice" class="text-danger"></span>
                </div>
                <div class="col-md-4 mb-3">
                    <label asp-for="SalePrice" class="form-label">Giá bán</label>
                    <input asp-for="SalePrice" class="form-control" />
                    <span asp-validation-for="SalePrice" class="text-danger"></span>
                </div>
                <div class="col-md-4 mb-3">
                    <label asp-for="SortOrder" class="form-label">Thứ tự sắp xếp</label>
                    <input asp-for="SortOrder" class="form-control" />
                    <span asp-validation-for="SortOrder" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="ShoeId" class="form-label">Giày</label>
                    <select asp-for="ShoeId" class="form-select" asp-items="ViewBag.ShoeId" readonly></select>
                    <span asp-validation-for="ShoeId" class="text-danger"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="ColorId" class="form-label">Màu sắc</label>
                    <select asp-for="ColorId" class="form-select" asp-items="ViewBag.ColorId"></select>
                    <span asp-validation-for="ColorId" class="text-danger"></span>
                </div>
            </div>
            <div class="col-12 col-md-6 mb-3">
                <div class="form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                    </label>
                </div>
            </div>
            <div class="d-flex justify-content-center align-items-center mb-3">
                <input type="submit" value="Lưu" class="btn-save" />
            </div>
        </form>
    </div>

    <div class="shoeImage mt-5">
        <h3 class="title-option mb-4"><span>Ảnh<sub class="fs-6">(@Model.Images.Count())</sub></span></h3>
        <div class="d-flex flex-column col-md-8 mx-auto position-relative">
            <div class="add-image">
                <button class="btn-save btn-add-img" data-bs-toggle="modal" data-bs-target="#model-upload-image">
                    <i class="fa-regular fa-plus fs-1"></i>
                </button>
            </div>
            <div class="carousel carousel-main" data-flickity='{"prevNextButtons": true, "pageDots": false}'>
                @foreach (var image in @Model.Images?.OrderBy(e => e.SortOrder) ?? Enumerable.Empty<Image>())
                {
                    <div class="carousel-cell" data-id="@image.Id">
                        <img src="@image.Path" data-id="@image.Id" alt="thumbnail-small" />
                    </div>
                }
            </div>
            <div class="carousel carousel-nav"
                 data-flickity='{ "asNavFor": ".carousel-main", "contain": true, "pageDots": false, "prevNextButtons": false }'>
                @foreach (var image in @Model.Images?.OrderBy(e => e.SortOrder) ?? Enumerable.Empty<Image>())
                {
                    <div class="carousel-cell thumbnail-small " data-id="@image.Id" data-sortOrder="@image.SortOrder">
                        <img src="@image.Path" data-id="@image.Id" class="img-fluid" alt="thumbnail-small" />
                        <div class="screen-blur"></div>
                        <div class="sort-options">
                            <div class="delete">
                                <i class="fa-solid fa-trash"></i>
                            </div>
                            <div class="sort-order">
                                <select name="SortOrder"></select>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-12 mt-5">
        <h3 class="title-option mb-4">Danh sách kích cỡ</h3>
        @* <select class="form-select" asp-items="ViewBag.SizeId"></select> *@
        <div class="table-responsive size-list text-right">
            <table class="table table-bordered table-striped align-middle">
                <thead class="">
                    <tr>
                        <th>Kích cỡ</th>
                        <th>Số lượng</th>
                        <th>Chức năng</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var shoeSize in Model?.ShoeSizes?.OrderBy(e => e?.Size?.Value).ToList() ??
                    Enumerable.Empty<ShoeSize>())
                    {
                        <tr data-id="@shoeSize.Id">
                            <td class="col-auto">@shoeSize?.Size?.Value</td>
                            <td class="col-auto">@shoeSize?.Quantity</td>
                            <td>
                                <button class="btn-option edit-size" >
                                    <i class="fa-regular fa-pen-to-square"></i>
                                </button>
                                <button class="btn-option delete-size">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>
</div>

<div class="d-flex justify-content-center align-items-center gap-4">
    <button id="add-size" class="btn-save" data-bs-toggle="modal" data-bs-target="#modal-size-quantity">
        Thêm kích cỡ
    </button>
    <a asp-controller="Shoe" asp-action="Edit" asp-route-id="@Model?.ShoeId" class="btn-back">
        Quay lại
    </a>
</div>



@section Scripts
{
    <script src="/js/shoeColorEdit.js" asp-append-version="true"></script>
}